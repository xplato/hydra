{"version":3,"file":"index.js","sources":["../node_modules/classnames/index.js","../packages/react/logic/string.ts","../packages/react/logic/dom.ts","../packages/react/components/Button.tsx","../packages/react/icons.tsx","../packages/react/components/Checkbox.tsx","../packages/react/components/Switch.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Returns str in lower case and stripped of whitespace\n * @param {string}\n */\nexport const removeWhitespaceAndLowerCase = (str: string) => {\n\treturn str.toLowerCase().replace(/\\s/g, \"\")\n}\n\n/**\n * Converts a string to kebab-case.\n * @example kebabize(\"aCamelCaseString\") => \"a-camel-case-string\"\n */\nexport const kebabize = (str: string) => {\n\treturn str\n\t\t.replaceAll(\" \", \"-\")\n\t\t.split(\"\")\n\t\t.map((letter, index) => {\n\t\t\tif (letter === \"-\") {\n\t\t\t\treturn \"-\"\n\t\t\t}\n\n\t\t\treturn letter.toUpperCase() === letter\n\t\t\t\t? `${index !== 0 ? \"-\" : \"\"}${letter.toLowerCase()}`\n\t\t\t\t: letter\n\t\t})\n\t\t.join(\"\")\n}\n\nexport const toSlug = (str: string) => {\n\treturn str.replaceAll(\" \", \"-\").toLowerCase()\n}\n\nexport const capitalize = (word: string) => {\n  return word.charAt(0).toUpperCase() + word.slice(1)\n}","import { kebabize } from \"./string\"\n\ninterface Mods {\n\t[key: string]: any\n}\n\n/**\n *\n * @param {Mods} mods\n * @returns {string[]}\n * @note This is assumed to be placed into a call to classNames.\n *\n */\nexport const generateMods = (mods: Mods) => {\n\tconst keys = Object.keys(mods)\n\n\tif (keys.length === 0) {\n\t\treturn \"\"\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = mods[key]\n\n\t\tif (value === true) {\n\t\t\treturn kebabize(key)\n\t\t}\n\n\t\tif (!value) {\n\t\t\treturn \"\"\n\t\t}\n\n\t\treturn `${kebabize(key)}-${\n\t\t\ttypeof value === \"number\" ? value : kebabize(value)\n\t\t}`\n\t})\n}\n\nexport const smoothScrollTo = (elementId: string) => {\n\tconst element = document.getElementById(elementId)\n\tif (element) {\n\t\telement.scrollIntoView({ behavior: \"smooth\" })\n\t}\n}\n","import React, { MouseEventHandler } from \"react\"\nimport classNames from \"classnames\"\n\nimport { generateMods } from \"../logic\"\nimport { ColoredComponent } from \"../types\"\n\nexport interface ButtonProps\n\textends ColoredComponent,\n\t\tReact.HTMLAttributes<HTMLButtonElement> {\n\taltClass?: string\n\tsize?: \"sm\" | \"default\" | \"lg\"\n}\n\nexport const Button = ({\n\taltClass,\n\tsize,\n\tbg,\n\tonClick: _onClick,\n\tclassName,\n\tchildren,\n\t...props\n}: ButtonProps) => {\n\tconst onClick: MouseEventHandler<HTMLButtonElement> = ev => {\n\t\tif (_onClick) _onClick(ev)\n\t}\n\n\treturn (\n\t\t<button\n\t\t\tclassName={classNames(\n\t\t\t\taltClass ?? \"hydra-button\",\n\t\t\t\tgenerateMods({ size, bg }),\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tonClick={onClick}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t)\n}\n\nButton.defaultProps = {\n\tsize: \"default\",\n\tbg: \"accent\",\n}\n","import React from 'react'\n\nexport const icons = {\n\tcheck: (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"16\"\n\t\t\theight=\"16\"\n\t\t\tfill=\"currentColor\"\n\t\t\tviewBox=\"0 0 16 16\"\n\t\t>\n\t\t\t<path d=\"M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z\" />\n\t\t</svg>\n\t),\n}\n","import React, { useCallback, useState } from \"react\"\nimport classNames from \"classnames\"\n\nimport { icons } from \"../icons\"\nimport {\n\tColoredComponent,\n\tCommonFormProps,\n\tCommonProps,\n\tCommonToggleProps,\n} from \"../types\"\nimport { generateMods } from \"../logic\"\n\ninterface Props\n\textends CommonProps,\n\t\tCommonFormProps<boolean>,\n\t\tCommonToggleProps,\n\t\tColoredComponent {\n\tdefaultChecked?: boolean\n}\n\nexport const Checkbox = ({\n\tlabel,\n\tlayout,\n\tdefaultChecked,\n\tonChange,\n\tbg,\n\taltClass,\n\tclassName,\n\ttoggleControlAltClass,\n\ttoggleControlClassname,\n}: Props) => {\n\tconst [checked, setChecked] = useState(defaultChecked || false)\n\n\tconst toggle = useCallback(() => {\n\t\tsetChecked(!checked)\n\t\tonChange && onChange(!checked)\n\t}, [checked])\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\ttoggleControlAltClass ?? \"hydra-toggle-control\",\n\t\t\t\ttoggleControlClassname,\n\t\t\t\tlayout\n\t\t\t)}\n\t\t>\n\t\t\t<button\n\t\t\t\tonClick={toggle}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\taltClass ?? \"hydra-checkbox\",\n\t\t\t\t\tgenerateMods({ bg }),\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\tdata-checked={checked}\n\t\t\t>\n\t\t\t\t{checked && <i className=\"icon size-5\">{icons.check}</i>}\n\t\t\t</button>\n\n\t\t\t{label && (\n\t\t\t\t<div className=\"label-wrap\" onClick={toggle}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t{typeof label === \"function\" ? label(checked) : label}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nCheckbox.defaultProps = {\n\tlayout: \"horizontal\",\n}\n","import React, { useCallback, useState } from \"react\"\nimport classNames from \"classnames\"\n\nimport { generateMods } from \"../logic\"\n\nimport {\n\tCommonProps,\n\tCommonFormProps,\n\tCommonToggleProps,\n\tColoredComponent,\n} from \"../types\"\n\nexport interface SwitchProps\n\textends CommonProps,\n\t\tCommonFormProps<boolean>,\n\t\tColoredComponent,\n\t\tCommonToggleProps {\n\tdefaultOn?: boolean\n}\n\nexport const Switch = ({\n\tclassName,\n\taltClass,\n\tdefaultOn,\n\ttoggleControlAltClass,\n\ttoggleControlClassname,\n\tonChange,\n\tlabel,\n\tlayout,\n\tbg,\n}: SwitchProps) => {\n\tconst [on, setOn] = useState(defaultOn || false)\n\n\tconst toggle = useCallback(() => {\n\t\tsetOn(!on)\n\t\tonChange && onChange(!on)\n\t}, [on])\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\ttoggleControlAltClass ?? \"hydra-toggle-control\",\n\t\t\t\tlayout,\n\t\t\t\ttoggleControlClassname\n\t\t\t)}\n\t\t>\n\t\t\t<button\n\t\t\t\tonClick={toggle}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\taltClass ?? \"hydra-switch\",\n\t\t\t\t\tgenerateMods({ on, bg }),\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<div className=\"bg\"></div>\n\t\t\t</button>\n\n\t\t\t{label && (\n\t\t\t\t<div className=\"label-wrap\" onClick={toggle}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t{typeof label === \"function\" ? label(on) : label}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nSwitch.defaultProps = {\n\tlayout: \"horizontal\",\n\tbg: \"accent\",\n}\n"],"names":["kebabize","str","replaceAll","split","map","letter","index","toUpperCase","toLowerCase","join","generateMods","mods","keys","Object","length","key","value","Button","altClass","size","bg","_onClick","onClick","className","children","props","ev","React","classNames","defaultProps","icons","check","xmlns","width","height","fill","viewBox","d","Checkbox","label","layout","defaultChecked","onChange","toggleControlAltClass","toggleControlClassname","useState","checked","setChecked","toggle","useCallback","Switch","defaultOn","on","setOn"],"mappings":"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"}