@use "../v";

$size: 1.25rem;

.hydra-switch {
	width: $size * 2;
	background-color: var(--ui-2);
	padding: 2px;
	margin: 0;
	display: flex;
	justify-content: flex-start;
	align-items: center;
	position: relative;
	cursor: pointer;
	box-shadow: inset 0 0 0 1px var(--ui-3), 0 1px 1px 0 var(--ui-2);

	&,
	& .bg {
		border-radius: 90px;
		transition: all var(--d-m-2) var(--e-s);
	}

	&:focus {
		outline: none;
	}

	&:focus-visible {
		box-shadow: 0 0 0 3px var(--accent-200) !important;

		html.dark & {
			box-shadow: 0 0 0 4px var(--accent-800) !important;
		}
	}

	&:active {
		background-color: var(--ui-3);
	}

	html.dark & {
		background-color: var(--ui-3);
	}

	&.on {
		background-color: var(--accent) !important;
		box-shadow: 0 1px 1px 0 var(--ui-2);

		&:focus-visible {
			box-shadow: inset 0 0 0 1px var(--accent-600),
				0 1px 1px 0 var(--ui-2), 0 0 0 3px var(--accent-200) !important;

			html.dark & {
				box-shadow: 0 0 0 4px var(--accent-800);
			}
		}

		&:active {
			background-color: var(--accent-hover) !important;
		}

		& .bg {
			transform: translateX($size - 0.25rem);
		}
	}

	& .bg {
		width: $size;
		height: $size;
		background-color: white;
		box-shadow: 0 1px 2px 1px rgba(black, 0.2);
	}

	@each $color in v.$colors {
		&.on.bg-#{$color} {
			background-color: var(--#{$color}-500) !important;
		}
	}
}
